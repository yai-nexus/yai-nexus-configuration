[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "yai-nexus-configuration"
version = "0.1.0"
description = "高质量的 Python 配置管理库 - 基于 Provider 模式，支持多种配置源"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "YAI Team", email = "team@yai.com"}
]
maintainers = [
    {name = "YAI Team", email = "team@yai.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
keywords = [
    "configuration",
    "config",
    "nacos", 
    "apollo",
    "settings",
    "management",
    "dynamic",
    "provider",
    "pydantic"
]
requires-python = ">=3.8"
dependencies = [
    "pydantic>=2.0.0,<3.0.0",
    "PyYAML>=6.0.0,<7.0.0",
]

[project.optional-dependencies]
nacos = [
    "nacos-sdk-python>=2.0.0,<3.0.0",
]
test = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
]
lint = [
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
# 开发依赖集合
dev = [
    "yai-nexus-configuration[test,lint]",
]
# 全部依赖
all = [
    "yai-nexus-configuration[nacos,dev,docs]",
]

[project.urls]
Homepage = "https://github.com/yai-team/yai-nexus-configuration"
Documentation = "https://yai-nexus-configuration.readthedocs.io/"
Repository = "https://github.com/yai-team/yai-nexus-configuration.git"
"Bug Tracker" = "https://github.com/yai-team/yai-nexus-configuration/issues"
Changelog = "https://github.com/yai-team/yai-nexus-configuration/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"yai_nexus_configuration" = ["py.typed"]

# Black 配置
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort 配置
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["yai_nexus_configuration"]

# MyPy 配置
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "nacos",
    "nacos.*"
]
ignore_missing_imports = true

# Pytest 配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
pythonpath = [
    ".", "src"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage 配置
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 