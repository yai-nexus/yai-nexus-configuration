{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u6b22\u8fce\u4f7f\u7528 YAI Nexus Configuration","text":"<p>\ud83d\ude80 \u9ad8\u8d28\u91cf\u7684 Python \u914d\u7f6e\u7ba1\u7406\u5e93 - \u57fa\u4e8e Provider \u6a21\u5f0f\uff0c\u652f\u6301\u591a\u79cd\u914d\u7f6e\u6e90</p> <p> </p> <p>YAI Nexus Configuration \u662f\u4e00\u4e2a\u4e3a\u73b0\u4ee3 Python \u5e94\u7528\u8bbe\u8ba1\u7684\u3001\u529f\u80fd\u5f3a\u5927\u4e14\u6613\u4e8e\u4f7f\u7528\u7684\u914d\u7f6e\u7ba1\u7406\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u901a\u8fc7\u7b80\u6d01\u4f18\u96c5\u7684 API \u548c\u9ad8\u5ea6\u53ef\u6269\u5c55\u7684\u67b6\u6784\uff0c\u5e2e\u52a9\u60a8\u8f7b\u677e\u7ba1\u7406\u6765\u81ea\u4e0d\u540c\u6765\u6e90\u7684\u914d\u7f6e\u3002</p>"},{"location":"#_1","title":"\u2728 \u4e3b\u8981\u7279\u6027","text":"<ul> <li>\ud83c\udfaf \u7b80\u6d01\u4f18\u96c5\u7684 API - \u91c7\u7528\u5de5\u5382\u6a21\u5f0f\uff0c\u4e00\u884c\u4ee3\u7801\u521b\u5efa\u7ba1\u7406\u5668\u3002</li> <li>\ud83d\udd12 \u7ebf\u7a0b\u5b89\u5168 - \u6240\u6709\u64cd\u4f5c\u90fd\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u9002\u7528\u4e8e\u591a\u7ebf\u7a0b\u73af\u5883\u3002</li> <li>\ud83d\udd04 \u81ea\u52a8\u914d\u7f6e\u66f4\u65b0 - \u5b9e\u65f6\u76d1\u542c\u914d\u7f6e\u6e90\u53d8\u66f4\uff0c\u81ea\u52a8\u66f4\u65b0\u672c\u5730\u914d\u7f6e\u3002</li> <li>\ud83e\udde9 \u53ef\u6269\u5c55\u67b6\u6784 - \u57fa\u4e8e Provider \u6a21\u5f0f\uff0c\u8f7b\u677e\u652f\u6301\u65b0\u7684\u914d\u7f6e\u6e90\u3002</li> <li>\u2705 \u7c7b\u578b\u5b89\u5168 - \u5b8c\u6574\u7684\u7c7b\u578b\u63d0\u793a\u652f\u6301\uff0c\u57fa\u4e8e Pydantic \u6570\u636e\u9a8c\u8bc1\u3002</li> <li>\ud83d\udce6 \u96f6\u4f9d\u8d56\u51b2\u7a81 - \u7cbe\u5fc3\u8bbe\u8ba1\u7684\u4f9d\u8d56\u7ba1\u7406\uff0c\u907f\u514d\u7248\u672c\u51b2\u7a81\u3002</li> </ul>"},{"location":"#_2","title":"\ud83c\udfd7\ufe0f \u67b6\u6784\u8bbe\u8ba1","text":"<p>YAI Nexus Configuration \u91c7\u7528\u4e86\u7ecf\u8fc7\u6df1\u5ea6\u601d\u8003\u7684 \u65b9\u6848 E\uff08\u5de5\u5382\u6a21\u5f0f\uff09 \u67b6\u6784\uff1a</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   \u7528\u6237\u4ee3\u7801      \u2502\u2500\u2500\u2500\u2500\u2502  NexusConfigManager    \u2502\u2500\u2500\u2500\u2500\u2502  ConfigStore    \u2502\n\u2502                 \u2502    \u2502  (\u5de5\u5382 + \u7ba1\u7406)    \u2502    \u2502  (\u7ebf\u7a0b\u5b89\u5168\u5b58\u50a8)  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                  \u2502\n                                  \u25bc\n                       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                       \u2502 AbstractProvider \u2502\n                       \u2502    (\u62bd\u8c61\u5c42)       \u2502\n                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                 \u2502\n                    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                    \u25bc                         \u25bc\n            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n            \u2502 NacosProvider\u2502        \u2502 \u672a\u6765\u7684Provider\u2502\n            \u2502              \u2502        \u2502 (Apollo\u7b49)   \u2502\n            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"#_3","title":"\u6838\u5fc3\u4f18\u52bf","text":"<ul> <li>\u9ad8\u5185\u805a\uff0c\u4f4e\u8026\u5408: Provider \u62bd\u8c61\u5c42\u5b8c\u5168\u9694\u79bb\u4e86\u914d\u7f6e\u6e90\u5b9e\u73b0\u3002</li> <li>\u9762\u5411\u63a5\u53e3\u7f16\u7a0b: \u6838\u5fc3\u903b\u8f91\u53ea\u4f9d\u8d56\u62bd\u8c61\u63a5\u53e3\uff0c\u4fbf\u4e8e\u6d4b\u8bd5\u548c\u6269\u5c55\u3002</li> <li>\u5de5\u5382\u6a21\u5f0f: \u63d0\u4f9b\u7b80\u6d01\u7684\u521b\u5efa\u63a5\u53e3\uff0c\u9690\u85cf\u590d\u6742\u7684\u521d\u59cb\u5316\u903b\u8f91\u3002</li> <li>\u5355\u4e00\u804c\u8d23: \u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u6709\u660e\u786e\u7684\u804c\u8d23\u8fb9\u754c\u3002</li> </ul>"},{"location":"#_4","title":"\ud83c\udfaf \u8bbe\u8ba1\u54f2\u5b66","text":"<p>YAI Nexus Configuration \u7684\u8bbe\u8ba1\u9075\u5faa\u4ee5\u4e0b\u539f\u5219\uff1a</p> <ol> <li>\u7b80\u6d01\u80dc\u8fc7\u590d\u6742 - API \u8bbe\u8ba1\u529b\u6c42\u7b80\u6d01\u76f4\u89c2\u3002</li> <li>\u663e\u5f0f\u80dc\u8fc7\u9690\u5f0f - \u907f\u514d\u9b54\u6cd5\u65b9\u6cd5\uff0c\u6240\u6709\u884c\u4e3a\u90fd\u662f\u53ef\u9884\u6d4b\u7684\u3002</li> <li>\u9762\u5411\u63a5\u53e3\u7f16\u7a0b - \u901a\u8fc7\u62bd\u8c61\u63a5\u53e3\u5b9e\u73b0\u9ad8\u5ea6\u89e3\u8026\u3002</li> <li>\u5931\u8d25\u5feb\u901f\u66b4\u9732 - \u914d\u7f6e\u9519\u8bef\u5728\u542f\u52a8\u65f6\u5c31\u4f1a\u88ab\u53d1\u73b0\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u3002</li> <li>\u7c7b\u578b\u5b89\u5168\u7b2c\u4e00 - \u5b8c\u6574\u7684\u7c7b\u578b\u63d0\u793a\uff0c\u8ba9 IDE \u548c\u5de5\u5177\u66f4\u597d\u5730\u5e2e\u52a9\u5f00\u53d1\u3002</li> </ol> <p>\u2b50 \u5982\u679c\u8fd9\u4e2a\u9879\u76ee\u5bf9\u60a8\u6709\u5e2e\u52a9\uff0c\u8bf7\u5728 GitHub \u4e0a\u7ed9\u6211\u4eec\u4e00\u4e2a Star\uff01 </p>"},{"location":"CHANGELOG/","title":"\u66f4\u65b0\u65e5\u5fd7","text":"<p>\u6240\u6709\u91cd\u8981\u7684\u9879\u76ee\u66f4\u65b0\u90fd\u4f1a\u8bb0\u5f55\u5728\u6b64\u3002\u8be6\u60c5\u8bf7\u53c2\u8003\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u7684 <code>CHANGELOG.md</code> \u6587\u4ef6\u3002 </p>"},{"location":"CONTRIBUTING/","title":"\u8d21\u732e\u6307\u5357","text":"<p>\u6211\u4eec\u6b22\u8fce\u4efb\u4f55\u5f62\u5f0f\u7684\u8d21\u732e\uff01\u8be6\u60c5\u8bf7\u53c2\u8003\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u7684 <code>CONTRIBUTING.md</code> \u6587\u4ef6\u3002 </p>"},{"location":"api/config_class/","title":"\u914d\u7f6e\u7c7b (NexusConfig &amp; @nexus_config)","text":"<p><code>NexusConfig</code> \u662f\u6240\u6709\u914d\u7f6e\u6a21\u578b\u7684\u57fa\u7c7b\uff0c\u800c <code>@nexus_config</code> \u88c5\u9970\u5668\u5219\u8d1f\u8d23\u5c06\u60a8\u7684\u6a21\u578b\u4e0e\u5177\u4f53\u7684\u914d\u7f6e\u6e90\u4fe1\u606f\uff08\u5982 <code>data_id</code> \u548c <code>group</code>\uff09\u5173\u8054\u8d77\u6765\u3002</p>"},{"location":"api/config_class/#nexusconfig","title":"<code>NexusConfig</code> \u57fa\u7c7b","text":"<p>\u6240\u6709\u81ea\u5b9a\u4e49\u914d\u7f6e\u7c7b\u90fd\u5e94\u7ee7\u627f\u81ea <code>NexusConfig</code>\u3002\u5b83\u57fa\u4e8e Pydantic \u7684 <code>BaseModel</code>\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u6240\u6709 Pydantic \u63d0\u4f9b\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u7c7b\u578b\u9a8c\u8bc1\u3001\u9ed8\u8ba4\u503c\u548c\u5b57\u6bb5\u81ea\u5b9a\u4e49\u3002</p> <p>               Bases: <code>BaseModel</code></p> <p>\u6240\u6709\u914d\u7f6e\u7c7b\u7684\u7edf\u4e00\u57fa\u7c7b\u3002</p> <p>\u7528\u6237\u5b9a\u4e49\u7684\u914d\u7f6e\u7c7b\u5e94\u4ece\u6b64\u7c7b\u7ee7\u627f\u3002\u5b83\u57fa\u4e8e Pydantic\uff0c\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684 \u6570\u636e\u9a8c\u8bc1\u3001\u7c7b\u578b\u8f6c\u6362\u548c\u5e8f\u5217\u5316\u529f\u80fd\uff0c\u662f\u5b9a\u4e49\u5f3a\u7c7b\u578b\u914d\u7f6e\u7ed3\u6784\u7684\u57fa\u7840\u3002</p> \u4e3b\u8981\u7279\u6027 <ul> <li>\u81ea\u52a8\u6570\u636e\u9a8c\u8bc1: \u57fa\u4e8e\u7c7b\u578b\u63d0\u793a\u786e\u4fdd\u6570\u636e\u503c\u7684\u6b63\u786e\u6027\u548c\u5b8c\u6574\u6027\u3002</li> <li>\u4e30\u5bcc\u7684\u5b57\u6bb5\u7c7b\u578b: \u652f\u6301\u5305\u62ec\u5d4c\u5957\u6a21\u578b\u3001\u5217\u8868\u3001\u679a\u4e3e\u5728\u5185\u7684\u591a\u79cd\u590d\u6742\u7c7b\u578b\u3002</li> <li>\u9ed8\u8ba4\u503c: \u53ef\u4ee5\u4e3a\u5b57\u6bb5\u63d0\u4f9b\u9ed8\u8ba4\u503c\u3002</li> <li>\u6613\u4e8e\u96c6\u6210: \u53ef\u8f7b\u677e\u4e0e JSON \u6216\u5b57\u5178\u7b49\u6570\u636e\u683c\u5f0f\u4e92\u76f8\u8f6c\u6362\u3002</li> </ul> \u7528\u6cd5\u793a\u4f8b <p>from yai_nexus_configuration import NexusConfig, nexus_config</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/config.py</code> <pre><code>class NexusConfig(BaseModel):\n    \"\"\"\n    \u6240\u6709\u914d\u7f6e\u7c7b\u7684\u7edf\u4e00\u57fa\u7c7b\u3002\n\n    \u7528\u6237\u5b9a\u4e49\u7684\u914d\u7f6e\u7c7b\u5e94\u4ece\u6b64\u7c7b\u7ee7\u627f\u3002\u5b83\u57fa\u4e8e Pydantic\uff0c\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\n    \u6570\u636e\u9a8c\u8bc1\u3001\u7c7b\u578b\u8f6c\u6362\u548c\u5e8f\u5217\u5316\u529f\u80fd\uff0c\u662f\u5b9a\u4e49\u5f3a\u7c7b\u578b\u914d\u7f6e\u7ed3\u6784\u7684\u57fa\u7840\u3002\n\n    \u4e3b\u8981\u7279\u6027:\n      - **\u81ea\u52a8\u6570\u636e\u9a8c\u8bc1**: \u57fa\u4e8e\u7c7b\u578b\u63d0\u793a\u786e\u4fdd\u6570\u636e\u503c\u7684\u6b63\u786e\u6027\u548c\u5b8c\u6574\u6027\u3002\n      - **\u4e30\u5bcc\u7684\u5b57\u6bb5\u7c7b\u578b**: \u652f\u6301\u5305\u62ec\u5d4c\u5957\u6a21\u578b\u3001\u5217\u8868\u3001\u679a\u4e3e\u5728\u5185\u7684\u591a\u79cd\u590d\u6742\u7c7b\u578b\u3002\n      - **\u9ed8\u8ba4\u503c**: \u53ef\u4ee5\u4e3a\u5b57\u6bb5\u63d0\u4f9b\u9ed8\u8ba4\u503c\u3002\n      - **\u6613\u4e8e\u96c6\u6210**: \u53ef\u8f7b\u677e\u4e0e JSON \u6216\u5b57\u5178\u7b49\u6570\u636e\u683c\u5f0f\u4e92\u76f8\u8f6c\u6362\u3002\n\n    \u7528\u6cd5\u793a\u4f8b:\n        &gt;&gt;&gt; from yai_nexus_configuration import NexusConfig, nexus_config\n        &gt;&gt;&gt; \n        &gt;&gt;&gt; # \u4f7f\u7528 @nexus_config \u5c06\u7c7b\u6807\u8bb0\u4e3a\u914d\u7f6e\u6a21\u578b\uff0c\u5e76\u63d0\u4f9b\u5143\u6570\u636e\n        &gt;&gt;&gt; @nexus_config(data_id=\"database.json\", group=\"production\")\n        ... class DatabaseConfig(NexusConfig):\n        ...     host: str\n        ...     port: int = 5432\n        ...     user: str\n        ...     password: str\n        ... \n        &gt;&gt;&gt; # \u6b64\u914d\u7f6e\u7c7b\u73b0\u5728\u53ef\u4ee5\u88ab NexusConfigManager \u6ce8\u518c\u548c\u7ba1\u7406\u3002\n        &gt;&gt;&gt; # manager = NexusConfigManager.with_file()\n        &gt;&gt;&gt; # manager.register(DatabaseConfig)\n        &gt;&gt;&gt; # db_config = manager.get_config(DatabaseConfig)\n    \"\"\"\n\n    # Pydantic V2+ Style Configuration\n    model_config = ConfigDict(\n        # \u5728\u5bf9\u5b57\u6bb5\u91cd\u65b0\u8d4b\u503c\u65f6\u8fdb\u884c\u6570\u636e\u9a8c\u8bc1\n        validate_assignment=True,\n        # \u5e8f\u5217\u5316\u679a\u4e3e\u65f6\u4f7f\u7528\u679a\u4e3e\u7684\u503c\u800c\u4e0d\u662f\u5176\u540d\u79f0\n        use_enum_values=True\n    )\n\n    def model_dump_json_schema(self) -&gt; Dict[str, Any]:\n        \"\"\"\n        \u83b7\u53d6\u6b64\u914d\u7f6e\u6a21\u578b\u7684 JSON Schema\u3002\n\n        Returns:\n            \u4e00\u4e2a\u8868\u793a\u914d\u7f6e\u7ed3\u6784\u548c\u7c7b\u578b\u7684 JSON Schema \u5b57\u5178\u3002\n        \"\"\"\n        return self.model_json_schema()\n\n    def get_config_summary(self) -&gt; Dict[str, Any]:\n        \"\"\"\n        \u83b7\u53d6\u914d\u7f6e\u7684\u6458\u8981\u4fe1\u606f\uff0c\u540c\u65f6\u9690\u85cf\u654f\u611f\u6570\u636e\u3002\n\n        \u6b64\u65b9\u6cd5\u4f1a\u5c4f\u853d\u540d\u79f0\u4e2d\u5305\u542b 'password', 'token', 'secret' \u7b49\n        \u5173\u952e\u8bcd\u7684\u5b57\u6bb5\u503c\uff0c\u9002\u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u548c\u8c03\u8bd5\u573a\u666f\u3002\n\n        Returns:\n            \u4e00\u4e2a\u5305\u542b\u914d\u7f6e\u6458\u8981\u7684\u5b57\u5178\uff0c\u654f\u611f\u5b57\u6bb5\u7684\u503c\u88ab\u66ff\u6362\u4e3a '***hidden***'\u3002\n        \"\"\"\n        data = self.model_dump()\n\n        # \u5b9a\u4e49\u9700\u8981\u9690\u85cf\u7684\u654f\u611f\u5b57\u6bb5\u5173\u952e\u8bcd\n        sensitive_fields = {'password', 'token', 'secret', 'key', 'api_key'}\n\n        for field_name in list(data.keys()):\n            if any(sensitive in field_name.lower() for sensitive in sensitive_fields):\n                data[field_name] = \"***hidden***\"\n\n        return data\n</code></pre>"},{"location":"api/config_class/#yai_nexus_configuration.config.NexusConfig--nexus_config","title":"\u4f7f\u7528 @nexus_config \u5c06\u7c7b\u6807\u8bb0\u4e3a\u914d\u7f6e\u6a21\u578b\uff0c\u5e76\u63d0\u4f9b\u5143\u6570\u636e","text":"<p>@nexus_config(data_id=\"database.json\", group=\"production\") ... class DatabaseConfig(NexusConfig): ...     host: str ...     port: int = 5432 ...     user: str ...     password: str ... </p>"},{"location":"api/config_class/#yai_nexus_configuration.config.NexusConfig--nexusconfigmanager","title":"\u6b64\u914d\u7f6e\u7c7b\u73b0\u5728\u53ef\u4ee5\u88ab NexusConfigManager \u6ce8\u518c\u548c\u7ba1\u7406\u3002","text":""},{"location":"api/config_class/#yai_nexus_configuration.config.NexusConfig--manager-nexusconfigmanagerwith_file","title":"manager = NexusConfigManager.with_file()","text":""},{"location":"api/config_class/#yai_nexus_configuration.config.NexusConfig--managerregisterdatabaseconfig","title":"manager.register(DatabaseConfig)","text":""},{"location":"api/config_class/#yai_nexus_configuration.config.NexusConfig--db_config-managerget_configdatabaseconfig","title":"db_config = manager.get_config(DatabaseConfig)","text":""},{"location":"api/config_class/#yai_nexus_configuration.config.NexusConfig.get_config_summary","title":"<code>get_config_summary() -&gt; Dict[str, Any]</code>","text":"<p>\u83b7\u53d6\u914d\u7f6e\u7684\u6458\u8981\u4fe1\u606f\uff0c\u540c\u65f6\u9690\u85cf\u654f\u611f\u6570\u636e\u3002</p> <p>\u6b64\u65b9\u6cd5\u4f1a\u5c4f\u853d\u540d\u79f0\u4e2d\u5305\u542b 'password', 'token', 'secret' \u7b49 \u5173\u952e\u8bcd\u7684\u5b57\u6bb5\u503c\uff0c\u9002\u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u548c\u8c03\u8bd5\u573a\u666f\u3002</p> <p>Returns:</p> Type Description <code>Dict[str, Any]</code> <p>\u4e00\u4e2a\u5305\u542b\u914d\u7f6e\u6458\u8981\u7684\u5b57\u5178\uff0c\u654f\u611f\u5b57\u6bb5\u7684\u503c\u88ab\u66ff\u6362\u4e3a 'hidden'\u3002</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/config.py</code> <pre><code>def get_config_summary(self) -&gt; Dict[str, Any]:\n    \"\"\"\n    \u83b7\u53d6\u914d\u7f6e\u7684\u6458\u8981\u4fe1\u606f\uff0c\u540c\u65f6\u9690\u85cf\u654f\u611f\u6570\u636e\u3002\n\n    \u6b64\u65b9\u6cd5\u4f1a\u5c4f\u853d\u540d\u79f0\u4e2d\u5305\u542b 'password', 'token', 'secret' \u7b49\n    \u5173\u952e\u8bcd\u7684\u5b57\u6bb5\u503c\uff0c\u9002\u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u548c\u8c03\u8bd5\u573a\u666f\u3002\n\n    Returns:\n        \u4e00\u4e2a\u5305\u542b\u914d\u7f6e\u6458\u8981\u7684\u5b57\u5178\uff0c\u654f\u611f\u5b57\u6bb5\u7684\u503c\u88ab\u66ff\u6362\u4e3a '***hidden***'\u3002\n    \"\"\"\n    data = self.model_dump()\n\n    # \u5b9a\u4e49\u9700\u8981\u9690\u85cf\u7684\u654f\u611f\u5b57\u6bb5\u5173\u952e\u8bcd\n    sensitive_fields = {'password', 'token', 'secret', 'key', 'api_key'}\n\n    for field_name in list(data.keys()):\n        if any(sensitive in field_name.lower() for sensitive in sensitive_fields):\n            data[field_name] = \"***hidden***\"\n\n    return data\n</code></pre>"},{"location":"api/config_class/#yai_nexus_configuration.config.NexusConfig.model_dump_json_schema","title":"<code>model_dump_json_schema() -&gt; Dict[str, Any]</code>","text":"<p>\u83b7\u53d6\u6b64\u914d\u7f6e\u6a21\u578b\u7684 JSON Schema\u3002</p> <p>Returns:</p> Type Description <code>Dict[str, Any]</code> <p>\u4e00\u4e2a\u8868\u793a\u914d\u7f6e\u7ed3\u6784\u548c\u7c7b\u578b\u7684 JSON Schema \u5b57\u5178\u3002</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/config.py</code> <pre><code>def model_dump_json_schema(self) -&gt; Dict[str, Any]:\n    \"\"\"\n    \u83b7\u53d6\u6b64\u914d\u7f6e\u6a21\u578b\u7684 JSON Schema\u3002\n\n    Returns:\n        \u4e00\u4e2a\u8868\u793a\u914d\u7f6e\u7ed3\u6784\u548c\u7c7b\u578b\u7684 JSON Schema \u5b57\u5178\u3002\n    \"\"\"\n    return self.model_json_schema()\n</code></pre>"},{"location":"api/config_class/#nexus_config","title":"<code>@nexus_config</code> \u88c5\u9970\u5668","text":"<p>\u8fd9\u4e2a\u88c5\u9970\u5668\u662f\u5fc5\u987b\u7684\uff0c\u5b83\u4e3a\u60a8\u7684\u914d\u7f6e\u7c7b\u6ce8\u5165\u4e86\u5143\u6570\u636e\u3002</p> <p>\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u7528\u4e8e\u4e3a <code>NexusConfig</code> \u5b50\u7c7b\u9644\u52a0\u914d\u7f6e\u5143\u6570\u636e\u3002</p> <p>Parameters:</p> Name Type Description Default <code>data_id</code> <code>str</code> <p>\u914d\u7f6e\u7684 data_id\u3002\u5728 Nacos \u4e2d\uff0c\u8fd9\u662f\u914d\u7f6e\u7684\u552f\u4e00\u6807\u8bc6\u3002            \u5728\u4f7f\u7528\u6587\u4ef6\u63d0\u4f9b\u8005\u65f6\uff0c\u8fd9\u901a\u5e38\u662f\u6587\u4ef6\u540d\uff08\u4f8b\u5982 <code>database.json</code>\uff09\u3002</p> required <code>group</code> <code>str</code> <p>\u914d\u7f6e\u6240\u5c5e\u7684\u7ec4\u3002\u9ed8\u8ba4\u4e3a \"DEFAULT_GROUP\"\u3002</p> <code>'DEFAULT_GROUP'</code> <code>auto_refresh</code> <code>bool</code> <p>\u662f\u5426\u5728\u914d\u7f6e\u53d8\u66f4\u65f6\u81ea\u52a8\u66f4\u65b0\u5b9e\u4f8b\u3002\u9ed8\u8ba4\u4e3a False\u3002</p> <code>False</code> <p>Returns:</p> Name Type Description <code>callable</code> <code>callable</code> <p>\u8fd4\u56de\u4e00\u4e2a\u88c5\u9970\u5668\u51fd\u6570\u3002</p> Example <p>@nexus_config(data_id=\"database.json\", group=\"PROD\", auto_refresh=True) ... class DatabaseConfig(NexusConfig): ...     host: str ...     port: int</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/decorator.py</code> <pre><code>def nexus_config(\n    data_id: str, \n    group: str = \"DEFAULT_GROUP\",\n    auto_refresh: bool = False\n) -&gt; callable:\n    \"\"\"\n    \u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u7528\u4e8e\u4e3a `NexusConfig` \u5b50\u7c7b\u9644\u52a0\u914d\u7f6e\u5143\u6570\u636e\u3002\n\n    Args:\n        data_id (str): \u914d\u7f6e\u7684 data_id\u3002\u5728 Nacos \u4e2d\uff0c\u8fd9\u662f\u914d\u7f6e\u7684\u552f\u4e00\u6807\u8bc6\u3002\n                       \u5728\u4f7f\u7528\u6587\u4ef6\u63d0\u4f9b\u8005\u65f6\uff0c\u8fd9\u901a\u5e38\u662f\u6587\u4ef6\u540d\uff08\u4f8b\u5982 `database.json`\uff09\u3002\n        group (str, optional): \u914d\u7f6e\u6240\u5c5e\u7684\u7ec4\u3002\u9ed8\u8ba4\u4e3a \"DEFAULT_GROUP\"\u3002\n        auto_refresh (bool, optional): \u662f\u5426\u5728\u914d\u7f6e\u53d8\u66f4\u65f6\u81ea\u52a8\u66f4\u65b0\u5b9e\u4f8b\u3002\u9ed8\u8ba4\u4e3a False\u3002\n\n    Returns:\n        callable: \u8fd4\u56de\u4e00\u4e2a\u88c5\u9970\u5668\u51fd\u6570\u3002\n\n    Example:\n        &gt;&gt;&gt; @nexus_config(data_id=\"database.json\", group=\"PROD\", auto_refresh=True)\n        ... class DatabaseConfig(NexusConfig):\n        ...     host: str\n        ...     port: int\n    \"\"\"\n    def decorator(cls: Type[NexusConfig]) -&gt; Type[NexusConfig]:\n        if not issubclass(cls, NexusConfig):\n            raise TypeError(\"The decorated class must be a subclass of NexusConfig.\")\n\n        # \u5c06\u5143\u6570\u636e\u9644\u52a0\u5230\u7c7b\u672c\u8eab\n        setattr(cls, '__nexus_config__', {\n            'data_id': data_id,\n            'group': group,\n            'auto_refresh': auto_refresh\n        })\n\n        return cls\n    return decorator\n</code></pre>"},{"location":"api/manager/","title":"NexusConfigManager","text":"<p><code>NexusConfigManager</code> \u662f\u914d\u7f6e\u7ba1\u7406\u5e93\u7684\u6838\u5fc3\u3002\u5b83\u8d1f\u8d23\u7ba1\u7406\u914d\u7f6e\u7684\u751f\u547d\u5468\u671f\u3001\u4e0e\u914d\u7f6e\u6e90\u4ea4\u4e92\u4ee5\u53ca\u63d0\u4f9b\u5bf9\u914d\u7f6e\u5b9e\u4f8b\u7684\u8bbf\u95ee\u3002</p> <p>\u914d\u7f6e\u7ba1\u7406\u5668</p> <p>\u63d0\u4f9b\u914d\u7f6e\u7684\u6ce8\u518c\u3001\u83b7\u53d6\u548c\u81ea\u52a8\u66f4\u65b0\u529f\u80fd\u3002\u91c7\u7528\u5de5\u5382\u6a21\u5f0f\u8bbe\u8ba1\uff0c \u652f\u6301\u591a\u79cd\u914d\u7f6e\u6e90\uff08Nacos\u3001Apollo \u7b49\uff09\u3002</p> <p>\u4e3b\u8981\u7279\u6027\uff1a - \u5de5\u5382\u65b9\u6cd5\u521b\u5efa\uff1a\u901a\u8fc7 with_nacos() \u7b49\u65b9\u6cd5\u521b\u5efa\u5b9e\u4f8b - \u81ea\u52a8\u914d\u7f6e\u66f4\u65b0\uff1a\u76d1\u542c\u914d\u7f6e\u6e90\u53d8\u66f4\uff0c\u81ea\u52a8\u66f4\u65b0\u672c\u5730\u914d\u7f6e - \u7ebf\u7a0b\u5b89\u5168\uff1a\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 - \u7c7b\u578b\u5b89\u5168\uff1a\u5b8c\u6574\u7684\u7c7b\u578b\u63d0\u793a\u652f\u6301</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>class NexusConfigManager:\n    \"\"\"\n    \u914d\u7f6e\u7ba1\u7406\u5668\n\n    \u63d0\u4f9b\u914d\u7f6e\u7684\u6ce8\u518c\u3001\u83b7\u53d6\u548c\u81ea\u52a8\u66f4\u65b0\u529f\u80fd\u3002\u91c7\u7528\u5de5\u5382\u6a21\u5f0f\u8bbe\u8ba1\uff0c\n    \u652f\u6301\u591a\u79cd\u914d\u7f6e\u6e90\uff08Nacos\u3001Apollo \u7b49\uff09\u3002\n\n    \u4e3b\u8981\u7279\u6027\uff1a\n    - \u5de5\u5382\u65b9\u6cd5\u521b\u5efa\uff1a\u901a\u8fc7 with_nacos() \u7b49\u65b9\u6cd5\u521b\u5efa\u5b9e\u4f8b\n    - \u81ea\u52a8\u914d\u7f6e\u66f4\u65b0\uff1a\u76d1\u542c\u914d\u7f6e\u6e90\u53d8\u66f4\uff0c\u81ea\u52a8\u66f4\u65b0\u672c\u5730\u914d\u7f6e\n    - \u7ebf\u7a0b\u5b89\u5168\uff1a\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\n    - \u7c7b\u578b\u5b89\u5168\uff1a\u5b8c\u6574\u7684\u7c7b\u578b\u63d0\u793a\u652f\u6301\n    \"\"\"\n\n    def __init__(self, provider: AbstractProvider):\n        \"\"\"\n        \u521d\u59cb\u5316\u7ba1\u7406\u5668\n\n        Note: \u901a\u5e38\u4e0d\u76f4\u63a5\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u800c\u662f\u4f7f\u7528\u5de5\u5382\u65b9\u6cd5\u5982 with_nacos()\n\n        Args:\n            provider: \u914d\u7f6e\u63d0\u4f9b\u8005\u5b9e\u4f8b\n        \"\"\"\n        self._provider = provider\n        self._store = ConfigStore()\n        self._registered_configs: Dict[Type, Dict[str, str]] = {}\n        self._lock = threading.RLock()\n        self._closed = False\n\n        # \u8fde\u63a5\u5230\u914d\u7f6e\u6e90\n        self._provider.connect()\n\n    @classmethod\n    def with_nacos(\n        cls,\n        server_addresses: Union[str, List[str]],\n        namespace: str = \"\",\n        username: Optional[str] = None,\n        password: Optional[str] = None,\n        **kwargs: Any\n    ) -&gt; \"NexusConfigManager\":\n        \"\"\"\n        \u4f7f\u7528 Nacos \u4f5c\u4e3a\u914d\u7f6e\u6e90\u521b\u5efa\u7ba1\u7406\u5668\n\n        Args:\n            server_addresses: Nacos \u670d\u52a1\u5668\u5730\u5740\n            namespace: \u547d\u540d\u7a7a\u95f4\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\uff08\u516c\u5171\u547d\u540d\u7a7a\u95f4\uff09\n            username: \u7528\u6237\u540d\uff08\u53ef\u9009\uff09\n            password: \u5bc6\u7801\uff08\u53ef\u9009\uff09\n            **kwargs: \u5176\u4ed6\u4f20\u9012\u7ed9 Nacos \u5ba2\u6237\u7aef\u7684\u53c2\u6570\n\n        Returns:\n            \u914d\u7f6e\u597d\u7684 NexusConfigManager \u5b9e\u4f8b\n\n        Example:\n            &gt;&gt;&gt; manager = NexusConfigManager.with_nacos(\"localhost:8848\")\n            &gt;&gt;&gt; manager.register(DatabaseConfig)\n            &gt;&gt;&gt; db_config = manager.get_config(DatabaseConfig)\n        \"\"\"\n        provider = NacosProvider(\n            server_addresses=server_addresses,\n            namespace=namespace,\n            username=username,\n            password=password,\n            **kwargs\n        )\n        return cls(provider)\n\n    @classmethod\n    def with_file(\n        cls,\n        base_path: Union[str, Path] = \"configs\",\n        default_format: str = \"json\",\n        watch_interval: float = 1.0,\n        auto_create_dirs: bool = True\n    ) -&gt; \"NexusConfigManager\":\n        \"\"\"\n        \u4f7f\u7528\u672c\u5730\u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u6e90\u521b\u5efa\u7ba1\u7406\u5668\n\n        Args:\n            base_path: \u914d\u7f6e\u6587\u4ef6\u7684\u57fa\u7840\u76ee\u5f55\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a \"configs\"\n            default_format: \u9ed8\u8ba4\u6587\u4ef6\u683c\u5f0f\uff0c\u652f\u6301 \"json\" \u6216 \"yaml\"\uff0c\u9ed8\u8ba4\u4e3a \"json\"\n            watch_interval: \u6587\u4ef6\u53d8\u66f4\u76d1\u542c\u95f4\u9694\uff08\u79d2\uff09\uff0c\u9ed8\u8ba4\u4e3a 1.0\n            auto_create_dirs: \u662f\u5426\u81ea\u52a8\u521b\u5efa\u4e0d\u5b58\u5728\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4e3a True\n\n        Returns:\n            \u914d\u7f6e\u597d\u7684 NexusConfigManager \u5b9e\u4f8b\n\n        Example:\n            &gt;&gt;&gt; # \u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\uff08JSON \u683c\u5f0f\uff0cconfigs \u76ee\u5f55\uff09\n            &gt;&gt;&gt; manager = NexusConfigManager.with_file()\n            &gt;&gt;&gt; \n            &gt;&gt;&gt; # \u81ea\u5b9a\u4e49\u914d\u7f6e\n            &gt;&gt;&gt; manager = NexusConfigManager.with_file(\n            ...     base_path=\"my_configs\",\n            ...     default_format=\"yaml\",\n            ...     watch_interval=0.5\n            ... )\n            &gt;&gt;&gt; manager.register(DatabaseConfig)\n            &gt;&gt;&gt; db_config = manager.get_config(DatabaseConfig)\n\n        Note:\n            \u6587\u4ef6\u8def\u5f84\u683c\u5f0f\u4e3a: {base_path}/{group}/{data_id}.{format}\n            \u4f8b\u5982: configs/PROD/database.json\n        \"\"\"\n        provider = FileProvider(\n            base_path=base_path,\n            default_format=default_format,\n            watch_interval=watch_interval,\n            auto_create_dirs=auto_create_dirs\n        )\n        return cls(provider)\n\n    def _parse_config_content(self, content: str, data_id: str) -&gt; Dict[str, Any]:\n        \"\"\"\n        \u667a\u80fd\u89e3\u6790\u914d\u7f6e\u5185\u5bb9\uff0c\u652f\u6301 JSON \u548c YAML\uff0c\u9075\u5faa\u4e25\u683c\u7684\u683c\u5f0f\u7ea6\u5b9a\u3002\n\n        Args:\n            content: \u914d\u7f6e\u5185\u5bb9\u7684\u539f\u59cb\u5b57\u7b26\u4e32\n            data_id: \u914d\u7f6e\u6587\u4ef6\u540d\uff0c\u7528\u4e8e\u63a8\u65ad\u683c\u5f0f\n\n        Returns:\n            \u89e3\u6790\u540e\u7684\u914d\u7f6e\u5b57\u5178\n\n        Raises:\n            ConfigValidationError: \u5982\u679c\u89e3\u6790\u5931\u8d25\u6216\u683c\u5f0f\u4e0d\u6b63\u786e\n        \"\"\"\n        lowered_data_id = data_id.lower()\n        data: Any\n\n        # \u4e25\u683c\u6839\u636e\u6587\u4ef6\u6269\u5c55\u540d\u9009\u62e9\u89e3\u6790\u5668\n        if lowered_data_id.endswith(('.yaml', '.yml')):\n            try:\n                data = yaml.safe_load(content)\n            except yaml.YAMLError as e:\n                raise ConfigValidationError(data_id, f\"YAML \u89e3\u6790\u5931\u8d25: {e}\")\n        else:\n            # \u9ed8\u8ba4\u4e3a JSON \u89e3\u6790\n            try:\n                data = json.loads(content)\n            except json.JSONDecodeError as e:\n                raise ConfigValidationError(data_id, f\"JSON \u89e3\u6790\u5931\u8d25: {e}\")\n\n        # \u9a8c\u8bc1\u89e3\u6790\u540e\u7684\u6839\u5bf9\u8c61\u5fc5\u987b\u662f\u5b57\u5178\n        if not isinstance(data, dict):\n            raise ConfigValidationError(\n                data_id, \n                f\"\u914d\u7f6e\u5185\u5bb9\u5fc5\u987b\u662f\u5b57\u5178/\u6620\u5c04\u683c\u5f0f\uff0c\u4f46\u89e3\u6790\u540e\u5f97\u5230\u7684\u662f {type(data).__name__}\"\n            )\n\n        return data\n\n    def register(self, config_class: Type[T]) -&gt; None:\n        \"\"\"\n        \u6ce8\u518c\u914d\u7f6e\u7c7b\n\n        \u6ce8\u518c\u540e\uff0c\u7ba1\u7406\u5668\u4f1a\uff1a\n        1. \u4ece\u914d\u7f6e\u6e90\u83b7\u53d6\u521d\u59cb\u914d\u7f6e\u6570\u636e\n        2. \u521b\u5efa\u914d\u7f6e\u5b9e\u4f8b\u5e76\u5b58\u50a8\n        3. \u5f00\u59cb\u76d1\u542c\u914d\u7f6e\u53d8\u66f4\n\n        Args:\n            config_class: \u88ab @nexus_config \u88c5\u9970\u7684\u914d\u7f6e\u7c7b\n\n        Raises:\n            MissingConfigMetadataError: \u5982\u679c\u914d\u7f6e\u7c7b\u7f3a\u5c11\u5fc5\u8981\u7684\u5143\u6570\u636e\n            ConfigValidationError: \u5982\u679c\u914d\u7f6e\u6570\u636e\u9a8c\u8bc1\u5931\u8d25\n        \"\"\"\n        with self._lock:\n            # \u68c0\u67e5\u662f\u5426\u5df2\u6ce8\u518c\n            if config_class in self._registered_configs:\n                logger.warning(f\"\u914d\u7f6e\u7c7b {config_class.__name__} \u5df2\u7ecf\u6ce8\u518c\uff0c\u8df3\u8fc7\")\n                return\n\n            # \u83b7\u53d6\u914d\u7f6e\u5143\u6570\u636e\n            metadata = get_config_metadata(config_class)\n            if not metadata:\n                raise MissingConfigMetadataError(config_class, \"nexus_config\")\n\n            data_id = metadata['data_id']\n            group = metadata['group']\n\n            # \u4ece\u914d\u7f6e\u6e90\u83b7\u53d6\u521d\u59cb\u914d\u7f6e\n            try:\n                raw_config = self._provider.get_config(data_id, group)\n                config_data = self._parse_config_content(raw_config, data_id)\n\n                # \u521b\u5efa\u914d\u7f6e\u5b9e\u4f8b\n                config_instance = config_class(**config_data)\n                self._store.set_config(config_instance)\n\n                # \u8bb0\u5f55\u6ce8\u518c\u4fe1\u606f\n                self._registered_configs[config_class] = metadata\n\n                # \u5f00\u59cb\u76d1\u542c\u914d\u7f6e\u53d8\u66f4\n                self._start_watching(config_class, data_id, group)\n\n                logger.info(f\"\u6210\u529f\u6ce8\u518c\u914d\u7f6e: {config_class.__name__} ({group}/{data_id})\")\n\n            except ConfigValidationError:\n                raise\n            except Exception as e:\n                if \"ValidationError\" in str(type(e)):\n                    raise ConfigValidationError(f\"{group}/{data_id}\", str(e))\n                raise\n\n    def get_config(self, config_class: Type[T]) -&gt; T:\n        \"\"\"\n        \u83b7\u53d6\u914d\u7f6e\u5b9e\u4f8b\n\n        Args:\n            config_class: \u914d\u7f6e\u7c7b\u578b\n\n        Returns:\n            \u914d\u7f6e\u5b9e\u4f8b\n\n        Raises:\n            ConfigNotRegisteredError: \u5982\u679c\u914d\u7f6e\u672a\u6ce8\u518c\n        \"\"\"\n        return self._store.get_config(config_class)\n\n    def unregister(self, config_class: Type[T]) -&gt; bool:\n        \"\"\"\n        \u53d6\u6d88\u6ce8\u518c\u914d\u7f6e\u7c7b\n\n        Args:\n            config_class: \u914d\u7f6e\u7c7b\u578b\n\n        Returns:\n            True \u5982\u679c\u6210\u529f\u53d6\u6d88\u6ce8\u518c\uff0cFalse \u5982\u679c\u914d\u7f6e\u672a\u6ce8\u518c\n        \"\"\"\n        with self._lock:\n            if config_class not in self._registered_configs:\n                return False\n\n            metadata = self._registered_configs[config_class]\n            data_id = metadata['data_id']\n            group = metadata['group']\n\n            # \u505c\u6b62\u76d1\u542c\n            self._provider.unwatch_config(data_id, group)\n\n            # \u79fb\u9664\u5b58\u50a8\n            self._store.remove_config(config_class)\n            del self._registered_configs[config_class]\n\n            logger.info(f\"\u53d6\u6d88\u6ce8\u518c\u914d\u7f6e: {config_class.__name__}\")\n            return True\n\n    def reload_config(self, config_class: Type[T]) -&gt; T:\n        \"\"\"\n        \u91cd\u65b0\u52a0\u8f7d\u6307\u5b9a\u914d\u7f6e\n\n        Args:\n            config_class: \u914d\u7f6e\u7c7b\u578b\n\n        Returns:\n            \u66f4\u65b0\u540e\u7684\u914d\u7f6e\u5b9e\u4f8b\n        \"\"\"\n        with self._lock:\n            if config_class not in self._registered_configs:\n                raise ConfigNotRegisteredError(config_class)\n\n            metadata = self._registered_configs[config_class]\n            data_id = metadata['data_id']\n            group = metadata['group']\n\n            try:\n                raw_config = self._provider.get_config(data_id, group)\n                config_data = self._parse_config_content(raw_config, data_id)\n                config_instance = config_class(**config_data)\n\n                self._store.set_config(config_instance)\n                logger.info(f\"\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e: {config_class.__name__}\")\n                return config_instance\n\n            except Exception as e:\n                logger.error(f\"\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u5931\u8d25: {config_class.__name__}, \u9519\u8bef: {e}\")\n                raise\n\n    def get_all_configs(self) -&gt; Dict[str, Any]:\n        \"\"\"\u83b7\u53d6\u6240\u6709\u5df2\u6ce8\u518c\u7684\u914d\u7f6e\u5b9e\u4f8b\"\"\"\n        return self._store.get_all_configs()\n\n    def get_manager_info(self) -&gt; Dict[str, Any]:\n        \"\"\"\n        \u83b7\u53d6\u7ba1\u7406\u5668\u72b6\u6001\u4fe1\u606f\n\n        Returns:\n            \u5305\u542b\u63d0\u4f9b\u8005\u4fe1\u606f\u3001\u6ce8\u518c\u914d\u7f6e\u6570\u91cf\u7b49\u7684\u72b6\u6001\u5b57\u5178\n        \"\"\"\n        return {\n            'provider': self._provider.get_provider_info(),\n            'registered_configs': len(self._registered_configs),\n            'config_names': [cls.__name__ for cls in self._registered_configs.keys()],\n            'store_config_count': self._store.get_config_count()\n        }\n\n    def close(self) -&gt; None:\n        \"\"\"\n        \u5173\u95ed\u7ba1\u7406\u5668\uff0c\u65ad\u5f00\u8fde\u63a5\u5e76\u6e05\u7406\u8d44\u6e90\u3002\u6b64\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002\n        \"\"\"\n        with self._lock:\n            # \u5982\u679c\u5df2\u7ecf\u5173\u95ed\uff0c\u5219\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\n            if self._closed:\n                logger.info(\"\u7ba1\u7406\u5668\u5df2\u5173\u95ed\uff0c\u65e0\u9700\u91cd\u590d\u64cd\u4f5c\")\n                return\n\n            # \u505c\u6b62\u6240\u6709\u76d1\u542c\u5668\n            for config_class, metadata in list(self._registered_configs.items()):\n                self._provider.unwatch_config(metadata['data_id'], metadata['group'])\n\n            # \u65ad\u5f00\u63d0\u4f9b\u8005\u8fde\u63a5\n            if self._provider.is_connected():\n                self._provider.disconnect()\n\n            # \u6e05\u7a7a\u5b58\u50a8\u5e76\u6807\u8bb0\u4e3a\u5df2\u5173\u95ed\n            self._store.clear()\n            self._registered_configs.clear()\n            self._closed = True\n\n            logger.info(\"\u7ba1\u7406\u5668\u5df2\u6210\u529f\u5173\u95ed\")\n\n    def _start_watching(self, config_class: Type, data_id: str, group: str) -&gt; None:\n        \"\"\"\u5f00\u59cb\u76d1\u542c\u914d\u7f6e\u53d8\u66f4\"\"\"\n        def on_config_change(new_content: str):\n            \"\"\"\u914d\u7f6e\u53d8\u66f4\u56de\u8c03\"\"\"\n            try:\n                config_data = self._parse_config_content(new_content, data_id)\n                new_instance = config_class(**config_data)\n                self._store.set_config(new_instance)\n                logger.info(f\"\u914d\u7f6e\u5df2\u66f4\u65b0: {config_class.__name__}\")\n            except Exception as e:\n                logger.error(f\"\u5904\u7406\u914d\u7f6e\u53d8\u66f4\u65f6\u51fa\u9519: {config_class.__name__}, \u9519\u8bef: {e}\")\n\n        self._provider.watch_config(data_id, group, on_config_change)\n\n    def __enter__(self):\n        \"\"\"\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u652f\u6301\"\"\"\n        return self\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        \"\"\"\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u652f\u6301\"\"\"\n        self.close()\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.__init__","title":"__init__","text":"<pre><code>__init__(provider: AbstractProvider)\n</code></pre> <p>\u521d\u59cb\u5316\u7ba1\u7406\u5668</p> <p>Note: \u901a\u5e38\u4e0d\u76f4\u63a5\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u800c\u662f\u4f7f\u7528\u5de5\u5382\u65b9\u6cd5\u5982 with_nacos()</p> <p>Parameters:</p> Name Type Description Default <code>provider</code> <code>AbstractProvider</code> <p>\u914d\u7f6e\u63d0\u4f9b\u8005\u5b9e\u4f8b</p> required Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>def __init__(self, provider: AbstractProvider):\n    \"\"\"\n    \u521d\u59cb\u5316\u7ba1\u7406\u5668\n\n    Note: \u901a\u5e38\u4e0d\u76f4\u63a5\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u800c\u662f\u4f7f\u7528\u5de5\u5382\u65b9\u6cd5\u5982 with_nacos()\n\n    Args:\n        provider: \u914d\u7f6e\u63d0\u4f9b\u8005\u5b9e\u4f8b\n    \"\"\"\n    self._provider = provider\n    self._store = ConfigStore()\n    self._registered_configs: Dict[Type, Dict[str, str]] = {}\n    self._lock = threading.RLock()\n    self._closed = False\n\n    # \u8fde\u63a5\u5230\u914d\u7f6e\u6e90\n    self._provider.connect()\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.with_nacos","title":"with_nacos  <code>classmethod</code>","text":"<pre><code>with_nacos(\n    server_addresses: Union[str, List[str]],\n    namespace: str = \"\",\n    username: Optional[str] = None,\n    password: Optional[str] = None,\n    **kwargs: Any\n) -&gt; NexusConfigManager\n</code></pre> <p>\u4f7f\u7528 Nacos \u4f5c\u4e3a\u914d\u7f6e\u6e90\u521b\u5efa\u7ba1\u7406\u5668</p> <p>Parameters:</p> Name Type Description Default <code>server_addresses</code> <code>Union[str, List[str]]</code> <p>Nacos \u670d\u52a1\u5668\u5730\u5740</p> required <code>namespace</code> <code>str</code> <p>\u547d\u540d\u7a7a\u95f4\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\uff08\u516c\u5171\u547d\u540d\u7a7a\u95f4\uff09</p> <code>''</code> <code>username</code> <code>Optional[str]</code> <p>\u7528\u6237\u540d\uff08\u53ef\u9009\uff09</p> <code>None</code> <code>password</code> <code>Optional[str]</code> <p>\u5bc6\u7801\uff08\u53ef\u9009\uff09</p> <code>None</code> <code>**kwargs</code> <code>Any</code> <p>\u5176\u4ed6\u4f20\u9012\u7ed9 Nacos \u5ba2\u6237\u7aef\u7684\u53c2\u6570</p> <code>{}</code> <p>Returns:</p> Type Description <code>NexusConfigManager</code> <p>\u914d\u7f6e\u597d\u7684 NexusConfigManager \u5b9e\u4f8b</p> Example <p>manager = NexusConfigManager.with_nacos(\"localhost:8848\") manager.register(DatabaseConfig) db_config = manager.get_config(DatabaseConfig)</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>@classmethod\ndef with_nacos(\n    cls,\n    server_addresses: Union[str, List[str]],\n    namespace: str = \"\",\n    username: Optional[str] = None,\n    password: Optional[str] = None,\n    **kwargs: Any\n) -&gt; \"NexusConfigManager\":\n    \"\"\"\n    \u4f7f\u7528 Nacos \u4f5c\u4e3a\u914d\u7f6e\u6e90\u521b\u5efa\u7ba1\u7406\u5668\n\n    Args:\n        server_addresses: Nacos \u670d\u52a1\u5668\u5730\u5740\n        namespace: \u547d\u540d\u7a7a\u95f4\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\uff08\u516c\u5171\u547d\u540d\u7a7a\u95f4\uff09\n        username: \u7528\u6237\u540d\uff08\u53ef\u9009\uff09\n        password: \u5bc6\u7801\uff08\u53ef\u9009\uff09\n        **kwargs: \u5176\u4ed6\u4f20\u9012\u7ed9 Nacos \u5ba2\u6237\u7aef\u7684\u53c2\u6570\n\n    Returns:\n        \u914d\u7f6e\u597d\u7684 NexusConfigManager \u5b9e\u4f8b\n\n    Example:\n        &gt;&gt;&gt; manager = NexusConfigManager.with_nacos(\"localhost:8848\")\n        &gt;&gt;&gt; manager.register(DatabaseConfig)\n        &gt;&gt;&gt; db_config = manager.get_config(DatabaseConfig)\n    \"\"\"\n    provider = NacosProvider(\n        server_addresses=server_addresses,\n        namespace=namespace,\n        username=username,\n        password=password,\n        **kwargs\n    )\n    return cls(provider)\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.with_file","title":"with_file  <code>classmethod</code>","text":"<pre><code>with_file(\n    base_path: Union[str, Path] = \"configs\",\n    default_format: str = \"json\",\n    watch_interval: float = 1.0,\n    auto_create_dirs: bool = True,\n) -&gt; NexusConfigManager\n</code></pre> <p>\u4f7f\u7528\u672c\u5730\u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u6e90\u521b\u5efa\u7ba1\u7406\u5668</p> <p>Parameters:</p> Name Type Description Default <code>base_path</code> <code>Union[str, Path]</code> <p>\u914d\u7f6e\u6587\u4ef6\u7684\u57fa\u7840\u76ee\u5f55\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a \"configs\"</p> <code>'configs'</code> <code>default_format</code> <code>str</code> <p>\u9ed8\u8ba4\u6587\u4ef6\u683c\u5f0f\uff0c\u652f\u6301 \"json\" \u6216 \"yaml\"\uff0c\u9ed8\u8ba4\u4e3a \"json\"</p> <code>'json'</code> <code>watch_interval</code> <code>float</code> <p>\u6587\u4ef6\u53d8\u66f4\u76d1\u542c\u95f4\u9694\uff08\u79d2\uff09\uff0c\u9ed8\u8ba4\u4e3a 1.0</p> <code>1.0</code> <code>auto_create_dirs</code> <code>bool</code> <p>\u662f\u5426\u81ea\u52a8\u521b\u5efa\u4e0d\u5b58\u5728\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4e3a True</p> <code>True</code> <p>Returns:</p> Type Description <code>NexusConfigManager</code> <p>\u914d\u7f6e\u597d\u7684 NexusConfigManager \u5b9e\u4f8b</p> Example Note <p>\u6587\u4ef6\u8def\u5f84\u683c\u5f0f\u4e3a: {base_path}/{group}/{data_id}.{format} \u4f8b\u5982: configs/PROD/database.json</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>@classmethod\ndef with_file(\n    cls,\n    base_path: Union[str, Path] = \"configs\",\n    default_format: str = \"json\",\n    watch_interval: float = 1.0,\n    auto_create_dirs: bool = True\n) -&gt; \"NexusConfigManager\":\n    \"\"\"\n    \u4f7f\u7528\u672c\u5730\u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u6e90\u521b\u5efa\u7ba1\u7406\u5668\n\n    Args:\n        base_path: \u914d\u7f6e\u6587\u4ef6\u7684\u57fa\u7840\u76ee\u5f55\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a \"configs\"\n        default_format: \u9ed8\u8ba4\u6587\u4ef6\u683c\u5f0f\uff0c\u652f\u6301 \"json\" \u6216 \"yaml\"\uff0c\u9ed8\u8ba4\u4e3a \"json\"\n        watch_interval: \u6587\u4ef6\u53d8\u66f4\u76d1\u542c\u95f4\u9694\uff08\u79d2\uff09\uff0c\u9ed8\u8ba4\u4e3a 1.0\n        auto_create_dirs: \u662f\u5426\u81ea\u52a8\u521b\u5efa\u4e0d\u5b58\u5728\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4e3a True\n\n    Returns:\n        \u914d\u7f6e\u597d\u7684 NexusConfigManager \u5b9e\u4f8b\n\n    Example:\n        &gt;&gt;&gt; # \u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\uff08JSON \u683c\u5f0f\uff0cconfigs \u76ee\u5f55\uff09\n        &gt;&gt;&gt; manager = NexusConfigManager.with_file()\n        &gt;&gt;&gt; \n        &gt;&gt;&gt; # \u81ea\u5b9a\u4e49\u914d\u7f6e\n        &gt;&gt;&gt; manager = NexusConfigManager.with_file(\n        ...     base_path=\"my_configs\",\n        ...     default_format=\"yaml\",\n        ...     watch_interval=0.5\n        ... )\n        &gt;&gt;&gt; manager.register(DatabaseConfig)\n        &gt;&gt;&gt; db_config = manager.get_config(DatabaseConfig)\n\n    Note:\n        \u6587\u4ef6\u8def\u5f84\u683c\u5f0f\u4e3a: {base_path}/{group}/{data_id}.{format}\n        \u4f8b\u5982: configs/PROD/database.json\n    \"\"\"\n    provider = FileProvider(\n        base_path=base_path,\n        default_format=default_format,\n        watch_interval=watch_interval,\n        auto_create_dirs=auto_create_dirs\n    )\n    return cls(provider)\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.with_file--json-configs","title":"\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\uff08JSON \u683c\u5f0f\uff0cconfigs \u76ee\u5f55\uff09","text":"<p>manager = NexusConfigManager.with_file()</p>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.with_file--_1","title":"\u81ea\u5b9a\u4e49\u914d\u7f6e","text":"<p>manager = NexusConfigManager.with_file( ...     base_path=\"my_configs\", ...     default_format=\"yaml\", ...     watch_interval=0.5 ... ) manager.register(DatabaseConfig) db_config = manager.get_config(DatabaseConfig)</p>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.register","title":"register","text":"<pre><code>register(config_class: Type[T]) -&gt; None\n</code></pre> <p>\u6ce8\u518c\u914d\u7f6e\u7c7b</p> <p>\u6ce8\u518c\u540e\uff0c\u7ba1\u7406\u5668\u4f1a\uff1a 1. \u4ece\u914d\u7f6e\u6e90\u83b7\u53d6\u521d\u59cb\u914d\u7f6e\u6570\u636e 2. \u521b\u5efa\u914d\u7f6e\u5b9e\u4f8b\u5e76\u5b58\u50a8 3. \u5f00\u59cb\u76d1\u542c\u914d\u7f6e\u53d8\u66f4</p> <p>Parameters:</p> Name Type Description Default <code>config_class</code> <code>Type[T]</code> <p>\u88ab @nexus_config \u88c5\u9970\u7684\u914d\u7f6e\u7c7b</p> required <p>Raises:</p> Type Description <code>MissingConfigMetadataError</code> <p>\u5982\u679c\u914d\u7f6e\u7c7b\u7f3a\u5c11\u5fc5\u8981\u7684\u5143\u6570\u636e</p> <code>ConfigValidationError</code> <p>\u5982\u679c\u914d\u7f6e\u6570\u636e\u9a8c\u8bc1\u5931\u8d25</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>def register(self, config_class: Type[T]) -&gt; None:\n    \"\"\"\n    \u6ce8\u518c\u914d\u7f6e\u7c7b\n\n    \u6ce8\u518c\u540e\uff0c\u7ba1\u7406\u5668\u4f1a\uff1a\n    1. \u4ece\u914d\u7f6e\u6e90\u83b7\u53d6\u521d\u59cb\u914d\u7f6e\u6570\u636e\n    2. \u521b\u5efa\u914d\u7f6e\u5b9e\u4f8b\u5e76\u5b58\u50a8\n    3. \u5f00\u59cb\u76d1\u542c\u914d\u7f6e\u53d8\u66f4\n\n    Args:\n        config_class: \u88ab @nexus_config \u88c5\u9970\u7684\u914d\u7f6e\u7c7b\n\n    Raises:\n        MissingConfigMetadataError: \u5982\u679c\u914d\u7f6e\u7c7b\u7f3a\u5c11\u5fc5\u8981\u7684\u5143\u6570\u636e\n        ConfigValidationError: \u5982\u679c\u914d\u7f6e\u6570\u636e\u9a8c\u8bc1\u5931\u8d25\n    \"\"\"\n    with self._lock:\n        # \u68c0\u67e5\u662f\u5426\u5df2\u6ce8\u518c\n        if config_class in self._registered_configs:\n            logger.warning(f\"\u914d\u7f6e\u7c7b {config_class.__name__} \u5df2\u7ecf\u6ce8\u518c\uff0c\u8df3\u8fc7\")\n            return\n\n        # \u83b7\u53d6\u914d\u7f6e\u5143\u6570\u636e\n        metadata = get_config_metadata(config_class)\n        if not metadata:\n            raise MissingConfigMetadataError(config_class, \"nexus_config\")\n\n        data_id = metadata['data_id']\n        group = metadata['group']\n\n        # \u4ece\u914d\u7f6e\u6e90\u83b7\u53d6\u521d\u59cb\u914d\u7f6e\n        try:\n            raw_config = self._provider.get_config(data_id, group)\n            config_data = self._parse_config_content(raw_config, data_id)\n\n            # \u521b\u5efa\u914d\u7f6e\u5b9e\u4f8b\n            config_instance = config_class(**config_data)\n            self._store.set_config(config_instance)\n\n            # \u8bb0\u5f55\u6ce8\u518c\u4fe1\u606f\n            self._registered_configs[config_class] = metadata\n\n            # \u5f00\u59cb\u76d1\u542c\u914d\u7f6e\u53d8\u66f4\n            self._start_watching(config_class, data_id, group)\n\n            logger.info(f\"\u6210\u529f\u6ce8\u518c\u914d\u7f6e: {config_class.__name__} ({group}/{data_id})\")\n\n        except ConfigValidationError:\n            raise\n        except Exception as e:\n            if \"ValidationError\" in str(type(e)):\n                raise ConfigValidationError(f\"{group}/{data_id}\", str(e))\n            raise\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.get_config","title":"get_config","text":"<pre><code>get_config(config_class: Type[T]) -&gt; T\n</code></pre> <p>\u83b7\u53d6\u914d\u7f6e\u5b9e\u4f8b</p> <p>Parameters:</p> Name Type Description Default <code>config_class</code> <code>Type[T]</code> <p>\u914d\u7f6e\u7c7b\u578b</p> required <p>Returns:</p> Type Description <code>T</code> <p>\u914d\u7f6e\u5b9e\u4f8b</p> <p>Raises:</p> Type Description <code>ConfigNotRegisteredError</code> <p>\u5982\u679c\u914d\u7f6e\u672a\u6ce8\u518c</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>def get_config(self, config_class: Type[T]) -&gt; T:\n    \"\"\"\n    \u83b7\u53d6\u914d\u7f6e\u5b9e\u4f8b\n\n    Args:\n        config_class: \u914d\u7f6e\u7c7b\u578b\n\n    Returns:\n        \u914d\u7f6e\u5b9e\u4f8b\n\n    Raises:\n        ConfigNotRegisteredError: \u5982\u679c\u914d\u7f6e\u672a\u6ce8\u518c\n    \"\"\"\n    return self._store.get_config(config_class)\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.unregister","title":"unregister","text":"<pre><code>unregister(config_class: Type[T]) -&gt; bool\n</code></pre> <p>\u53d6\u6d88\u6ce8\u518c\u914d\u7f6e\u7c7b</p> <p>Parameters:</p> Name Type Description Default <code>config_class</code> <code>Type[T]</code> <p>\u914d\u7f6e\u7c7b\u578b</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True \u5982\u679c\u6210\u529f\u53d6\u6d88\u6ce8\u518c\uff0cFalse \u5982\u679c\u914d\u7f6e\u672a\u6ce8\u518c</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>def unregister(self, config_class: Type[T]) -&gt; bool:\n    \"\"\"\n    \u53d6\u6d88\u6ce8\u518c\u914d\u7f6e\u7c7b\n\n    Args:\n        config_class: \u914d\u7f6e\u7c7b\u578b\n\n    Returns:\n        True \u5982\u679c\u6210\u529f\u53d6\u6d88\u6ce8\u518c\uff0cFalse \u5982\u679c\u914d\u7f6e\u672a\u6ce8\u518c\n    \"\"\"\n    with self._lock:\n        if config_class not in self._registered_configs:\n            return False\n\n        metadata = self._registered_configs[config_class]\n        data_id = metadata['data_id']\n        group = metadata['group']\n\n        # \u505c\u6b62\u76d1\u542c\n        self._provider.unwatch_config(data_id, group)\n\n        # \u79fb\u9664\u5b58\u50a8\n        self._store.remove_config(config_class)\n        del self._registered_configs[config_class]\n\n        logger.info(f\"\u53d6\u6d88\u6ce8\u518c\u914d\u7f6e: {config_class.__name__}\")\n        return True\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.reload_config","title":"reload_config","text":"<pre><code>reload_config(config_class: Type[T]) -&gt; T\n</code></pre> <p>\u91cd\u65b0\u52a0\u8f7d\u6307\u5b9a\u914d\u7f6e</p> <p>Parameters:</p> Name Type Description Default <code>config_class</code> <code>Type[T]</code> <p>\u914d\u7f6e\u7c7b\u578b</p> required <p>Returns:</p> Type Description <code>T</code> <p>\u66f4\u65b0\u540e\u7684\u914d\u7f6e\u5b9e\u4f8b</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>def reload_config(self, config_class: Type[T]) -&gt; T:\n    \"\"\"\n    \u91cd\u65b0\u52a0\u8f7d\u6307\u5b9a\u914d\u7f6e\n\n    Args:\n        config_class: \u914d\u7f6e\u7c7b\u578b\n\n    Returns:\n        \u66f4\u65b0\u540e\u7684\u914d\u7f6e\u5b9e\u4f8b\n    \"\"\"\n    with self._lock:\n        if config_class not in self._registered_configs:\n            raise ConfigNotRegisteredError(config_class)\n\n        metadata = self._registered_configs[config_class]\n        data_id = metadata['data_id']\n        group = metadata['group']\n\n        try:\n            raw_config = self._provider.get_config(data_id, group)\n            config_data = self._parse_config_content(raw_config, data_id)\n            config_instance = config_class(**config_data)\n\n            self._store.set_config(config_instance)\n            logger.info(f\"\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e: {config_class.__name__}\")\n            return config_instance\n\n        except Exception as e:\n            logger.error(f\"\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u5931\u8d25: {config_class.__name__}, \u9519\u8bef: {e}\")\n            raise\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.get_all_configs","title":"get_all_configs","text":"<pre><code>get_all_configs() -&gt; Dict[str, Any]\n</code></pre> <p>\u83b7\u53d6\u6240\u6709\u5df2\u6ce8\u518c\u7684\u914d\u7f6e\u5b9e\u4f8b</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>def get_all_configs(self) -&gt; Dict[str, Any]:\n    \"\"\"\u83b7\u53d6\u6240\u6709\u5df2\u6ce8\u518c\u7684\u914d\u7f6e\u5b9e\u4f8b\"\"\"\n    return self._store.get_all_configs()\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.get_manager_info","title":"get_manager_info","text":"<pre><code>get_manager_info() -&gt; Dict[str, Any]\n</code></pre> <p>\u83b7\u53d6\u7ba1\u7406\u5668\u72b6\u6001\u4fe1\u606f</p> <p>Returns:</p> Type Description <code>Dict[str, Any]</code> <p>\u5305\u542b\u63d0\u4f9b\u8005\u4fe1\u606f\u3001\u6ce8\u518c\u914d\u7f6e\u6570\u91cf\u7b49\u7684\u72b6\u6001\u5b57\u5178</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>def get_manager_info(self) -&gt; Dict[str, Any]:\n    \"\"\"\n    \u83b7\u53d6\u7ba1\u7406\u5668\u72b6\u6001\u4fe1\u606f\n\n    Returns:\n        \u5305\u542b\u63d0\u4f9b\u8005\u4fe1\u606f\u3001\u6ce8\u518c\u914d\u7f6e\u6570\u91cf\u7b49\u7684\u72b6\u6001\u5b57\u5178\n    \"\"\"\n    return {\n        'provider': self._provider.get_provider_info(),\n        'registered_configs': len(self._registered_configs),\n        'config_names': [cls.__name__ for cls in self._registered_configs.keys()],\n        'store_config_count': self._store.get_config_count()\n    }\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.close","title":"close","text":"<pre><code>close() -&gt; None\n</code></pre> <p>\u5173\u95ed\u7ba1\u7406\u5668\uff0c\u65ad\u5f00\u8fde\u63a5\u5e76\u6e05\u7406\u8d44\u6e90\u3002\u6b64\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>def close(self) -&gt; None:\n    \"\"\"\n    \u5173\u95ed\u7ba1\u7406\u5668\uff0c\u65ad\u5f00\u8fde\u63a5\u5e76\u6e05\u7406\u8d44\u6e90\u3002\u6b64\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002\n    \"\"\"\n    with self._lock:\n        # \u5982\u679c\u5df2\u7ecf\u5173\u95ed\uff0c\u5219\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\n        if self._closed:\n            logger.info(\"\u7ba1\u7406\u5668\u5df2\u5173\u95ed\uff0c\u65e0\u9700\u91cd\u590d\u64cd\u4f5c\")\n            return\n\n        # \u505c\u6b62\u6240\u6709\u76d1\u542c\u5668\n        for config_class, metadata in list(self._registered_configs.items()):\n            self._provider.unwatch_config(metadata['data_id'], metadata['group'])\n\n        # \u65ad\u5f00\u63d0\u4f9b\u8005\u8fde\u63a5\n        if self._provider.is_connected():\n            self._provider.disconnect()\n\n        # \u6e05\u7a7a\u5b58\u50a8\u5e76\u6807\u8bb0\u4e3a\u5df2\u5173\u95ed\n        self._store.clear()\n        self._registered_configs.clear()\n        self._closed = True\n\n        logger.info(\"\u7ba1\u7406\u5668\u5df2\u6210\u529f\u5173\u95ed\")\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.__enter__","title":"__enter__","text":"<pre><code>__enter__()\n</code></pre> <p>\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u652f\u6301</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>def __enter__(self):\n    \"\"\"\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u652f\u6301\"\"\"\n    return self\n</code></pre>"},{"location":"api/manager/#yai_nexus_configuration.manager.NexusConfigManager.__exit__","title":"__exit__","text":"<pre><code>__exit__(exc_type, exc_val, exc_tb)\n</code></pre> <p>\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u652f\u6301</p> Source code in <code>.venv/lib/python3.13/site-packages/yai_nexus_configuration/manager.py</code> <pre><code>def __exit__(self, exc_type, exc_val, exc_tb):\n    \"\"\"\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u652f\u6301\"\"\"\n    self.close()\n</code></pre>"},{"location":"guides/best_practices/","title":"\u6700\u4f73\u5b9e\u8df5\uff1a\u5927\u578b\u9879\u76ee\u96c6\u6210","text":"<p>\u5728\u5927\u578b\u9879\u76ee\u4e2d\u4f7f\u7528 <code>YAI Nexus Configuration</code> \u65f6\uff0c\u6211\u4eec\u63a8\u8350\u91c7\u7528\u4e2d\u5fc3\u5316\u914d\u7f6e\u6a21\u5757\u7684\u6a21\u5f0f\u6765\u7ba1\u7406 <code>NexusConfigManager</code> \u7684\u751f\u547d\u5468\u671f\u548c\u5b9e\u4f8b\u3002</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u80fd\u6709\u6548\u907f\u514d\u8d44\u6e90\u6d6a\u8d39\u548c\u5b9e\u4f8b\u72b6\u6001\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\uff0c\u540c\u65f6\u8ba9\u4e1a\u52a1\u4ee3\u7801\u4fdd\u6301\u6574\u6d01\u3002</p>"},{"location":"guides/best_practices/#_2","title":"\u63a8\u8350\u65b9\u6848\uff1a\u4e2d\u592e\u914d\u7f6e\u6a21\u5757","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u7684\u6a21\u5757\uff08\u4f8b\u5982 <code>my_project/config.py</code>\uff09\u6765\u7ba1\u7406 <code>NexusConfigManager</code>\u3002</p> <pre><code># my_project/config.py\n\nfrom yai_nexus_configuration import NexusConfigManager\nfrom .models import DatabaseConfig, RedisConfig, AppConfig # \u5bfc\u5165\u6240\u6709\u914d\u7f6e\u6a21\u578b\n\n# 1. \u5728\u6a21\u5757\u7ea7\u522b\u521b\u5efa\u5e76\u521d\u59cb\u5316\u7ba1\u7406\u5668\n#    \u5728\u5e94\u7528\u542f\u52a8\u65f6\u6267\u884c\u4e00\u6b21\u5373\u53ef\nmanager = NexusConfigManager.with_nacos(\n    server_addresses=\"your_nacos_server\",\n    # ... \u5176\u4ed6\u53c2\u6570\n)\n\n# 2. \u96c6\u4e2d\u6ce8\u518c\u6240\u6709\u914d\u7f6e\u7c7b\nmanager.register(DatabaseConfig, RedisConfig, AppConfig)\n\n# 3. \u63d0\u4f9b\u9884\u5148\u52a0\u8f7d\u597d\u7684\u914d\u7f6e\u5b9e\u4f8b\n#    \u5176\u4ed6\u6a21\u5757\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u8fd9\u4e9b\u5b9e\u4f8b\uff0c\u800c\u65e0\u9700\u5173\u5fc3 manager\nDB_CONFIG: DatabaseConfig = manager.get_config(DatabaseConfig)\nREDIS_CONFIG: RedisConfig = manager.get_config(RedisConfig)\nAPP_CONFIG: AppConfig = manager.get_config(AppConfig)\n\n# 4. \u63d0\u4f9b\u4e00\u4e2a\u5173\u95ed\u51fd\u6570\uff0c\u5728\u5e94\u7528\u9000\u51fa\u65f6\u8c03\u7528\ndef close_config_manager():\n    manager.close()\n</code></pre>"},{"location":"guides/best_practices/#_3","title":"\u4f7f\u7528\u65b9\u5f0f","text":"<p>\u5728\u9879\u76ee\u7684\u4efb\u4f55\u5176\u4ed6\u6a21\u5757\u4e2d\uff0c\u76f4\u63a5\u5bfc\u5165\u914d\u7f6e\u5b9e\u4f8b\u5373\u53ef\uff1a</p> <pre><code># my_project/services/user_service.py\n\nfrom my_project.config import DB_CONFIG\n\ndef get_user(user_id: int):\n    # \u76f4\u63a5\u4f7f\u7528\uff0c\u975e\u5e38\u6e05\u6670\n    db_host = DB_CONFIG.host\n    # ...\n</code></pre>"},{"location":"guides/best_practices/#web","title":"\u4e0e Web \u6846\u67b6\u96c6\u6210","text":"<p>\u5982\u679c\u60a8\u7684\u9879\u76ee\u57fa\u4e8e FastAPI \u7b49\u73b0\u4ee3\u6846\u67b6\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u5176\u4f9d\u8d56\u6ce8\u5165\u7cfb\u7edf\u6765\u7ba1\u7406\u914d\u7f6e\u5b9e\u4f8b\u7684\u751f\u547d\u5468\u671f\u3002 </p>"},{"location":"guides/file_provider/","title":"\u6587\u4ef6\u914d\u7f6e (File Provider)","text":"<p>\u6587\u6863\u5f85\u7f16\u5199\u3002 </p>"},{"location":"guides/nacos_provider/","title":"Nacos \u914d\u7f6e (Nacos Provider)","text":"<p>\u6587\u6863\u5f85\u7f16\u5199\u3002 </p>"},{"location":"guides/quickstart/","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u672c\u6307\u5357\u5c06\u5e2e\u52a9\u60a8\u5728 5 \u5206\u949f\u5185\u4e0a\u624b YAI Nexus Configuration\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u6700\u57fa\u7840\u7684\u672c\u5730\u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u6e90\uff0c\u8fd9\u4e0d\u9700\u8981\u4efb\u4f55\u5916\u90e8\u670d\u52a1\u4f9d\u8d56\u3002</p>"},{"location":"guides/quickstart/#1","title":"1. \u5b89\u88c5","text":"<p>\u9996\u5148\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86 Python (3.8+)\u3002\u7136\u540e\u901a\u8fc7 pip \u5b89\u88c5\u6211\u4eec\u7684\u5e93\uff1a</p> <pre><code>pip install yai-nexus-configuration\n</code></pre> <p>\u63d0\u793a</p> <p>\u6587\u4ef6\u548c YAML \u652f\u6301\u662f\u672c\u5e93\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u65e0\u9700\u5b89\u88c5\u4efb\u4f55\u989d\u5916\u4f9d\u8d56\u3002</p>"},{"location":"guides/quickstart/#2","title":"2. \u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a\u914d\u7f6e","text":"<p>\u5728\u60a8\u7684\u9879\u76ee\u6839\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a <code>configs</code> \u6587\u4ef6\u5939\uff0c\u5e76\u50cf\u8fd9\u6837\u7ec4\u7ec7\u60a8\u7684\u914d\u7f6e\uff1a</p> <pre><code>configs/\n\u2514\u2500\u2500 DEFAULT_GROUP/\n    \u2514\u2500\u2500 app.json\n</code></pre> <p>\u7136\u540e\uff0c\u5c06\u4ee5\u4e0b\u5185\u5bb9\u5199\u5165 <code>configs/DEFAULT_GROUP/app.json</code> \u6587\u4ef6:</p> <pre><code>{\n  \"app_name\": \"My Awesome App\",\n  \"debug\": true,\n  \"log_level\": \"DEBUG\"\n}\n</code></pre>"},{"location":"guides/quickstart/#3-python","title":"3. \u7f16\u5199 Python \u4ee3\u7801","text":"<p>\u73b0\u5728\uff0c\u521b\u5efa\u4e00\u4e2a Python \u6587\u4ef6\uff08\u4f8b\u5982 <code>main.py</code>\uff09\uff0c\u5e76\u5199\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>from yai_nexus_configuration import NexusConfigManager, NexusConfig, nexus_config\n\n# 1. \u5b9a\u4e49\u4e00\u4e2a\u914d\u7f6e\u6a21\u578b\uff0c\u5b83\u7684\u5b57\u6bb5\u4f1a\u81ea\u52a8\u6620\u5c04\u5230 app.json \u7684\u952e\n#    @nexus_config \u88c5\u9970\u5668\u5c06\u8fd9\u4e2a\u7c7b\u4e0e\u914d\u7f6e\u6587\u4ef6\u5173\u8054\u8d77\u6765\u3002\n@nexus_config(data_id=\"app.json\") # group \u9ed8\u8ba4\u4e3a \"DEFAULT_GROUP\"\nclass AppConfig(NexusConfig):\n    app_name: str\n    debug: bool\n    log_level: str\n\n# 2. \u4f7f\u7528 with \u8bed\u53e5\u521b\u5efa\u7ba1\u7406\u5668\uff0c\u5b83\u4f1a\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90\n#    \u6211\u4eec\u544a\u8bc9\u5b83\u5728 \"configs\" \u76ee\u5f55\u4e0b\u5bfb\u627e\u914d\u7f6e\u6587\u4ef6\u3002\nwith NexusConfigManager.with_file(base_path=\"configs\") as manager:\n\n    # 3. \u6ce8\u518c\u6211\u4eec\u521a\u521a\u5b9a\u4e49\u7684\u914d\u7f6e\u7c7b\n    manager.register(AppConfig)\n\n    # 4. \u83b7\u53d6\u7c7b\u578b\u5b89\u5168\u7684\u914d\u7f6e\u5b9e\u4f8b\n    #    IDE \u4f1a\u77e5\u9053 app_config \u662f AppConfig \u7c7b\u7684\u5b9e\u4f8b\uff0c\u5e76\u63d0\u4f9b\u4ee3\u7801\u8865\u5168\uff01\n    app_config = manager.get_config(AppConfig)\n\n    print(f\"\u5e94\u7528\u540d\u79f0: {app_config.app_name}\")\n    print(f\"\u8c03\u8bd5\u6a21\u5f0f: {app_config.debug}\")\n\n    # 5. \u8bd5\u8bd5\u770b\uff01\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u624b\u52a8\u4fee\u6539 app.json \u6587\u4ef6\u5e76\u4fdd\u5b58\u3002\n    #    \u518d\u6b21\u83b7\u53d6\u914d\u7f6e\uff0c\u5c31\u4f1a\u770b\u5230\u66f4\u65b0\uff01\n    import time\n    time.sleep(5) # \u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u7ed9\u60a8\u65f6\u95f4\u4fee\u6539\u6587\u4ef6\n\n    updated_config = manager.get_config(AppConfig)\n    print(f\"\u66f4\u65b0\u540e\u7684\u5e94\u7528\u540d\u79f0: {updated_config.app_name}\")\n</code></pre>"},{"location":"guides/quickstart/#4","title":"4. \u8fd0\u884c\uff01","text":"<p>\u6253\u5f00\u7ec8\u7aef\uff0c\u8fd0\u884c\u60a8\u7684\u811a\u672c\uff1a</p> <pre><code>python main.py\n</code></pre> <p>\u60a8\u5e94\u8be5\u80fd\u770b\u5230\u5982\u4e0b\u8f93\u51fa\uff1a</p> <pre><code>\u5e94\u7528\u540d\u79f0: My Awesome App\n\u8c03\u8bd5\u6a21\u5f0f: True\n\u66f4\u65b0\u540e\u7684\u5e94\u7528\u540d\u79f0: My Awesome App\n</code></pre> <p>\u73b0\u5728\uff0c\u8bd5\u7740\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5feb\u901f\u4fee\u6539 <code>app.json</code> \u4e2d\u7684 <code>app_name</code> \u503c\uff0c\u60a8\u5c06\u770b\u5230\u7b2c\u4e8c\u6b21\u6253\u5370\u51fa\u7684\u5e94\u7528\u540d\u79f0\u53d1\u751f\u4e86\u53d8\u5316\uff01</p> <p>\u606d\u559c\uff01\u60a8\u5df2\u7ecf\u6210\u529f\u5730\u4f7f\u7528 YAI Nexus Configuration \u52a0\u8f7d\u5e76\u5b9e\u65f6\u66f4\u65b0\u4e86\u914d\u7f6e\u3002\u63a5\u4e0b\u6765\uff0c\u60a8\u53ef\u4ee5\u7ee7\u7eed\u63a2\u7d22\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u4f7f\u7528\u6587\u4ef6\u914d\u7f6e (File Provider)</li> <li>\u8fde\u63a5\u5230 Nacos (Nacos Provider)</li> <li>\u5728\u5927\u578b\u9879\u76ee\u4e2d\u7684\u6700\u4f73\u5b9e\u8df5 </li> </ul>"}]}